#!/bin/bash

set -o nounset
shopt -s huponexit

# User defines
declare -i DVB_DEVICE_NUM="0"
declare CHANNELS_CONF="${HOME}/Mychannels.conf"
declare SAVE_FOLDER="${HOME}/TV/tele"
declare SCHED_FILE="$HOME/.sched-tv"
declare ZAP_COMMAND="tzap"
declare -i SLEEP=15

# Program defines
declare -i DAY="0"
declare -i START="0"
declare -i FINISH="0"
declare CHAN="0"
declare -i MINUTES="0"
declare -i SECONDS="0"
declare -i REC_START="0"
declare -i REC_HOURS="0"
declare -i REC_MINS="0"

declare -i PIDOF_AZAP=0
declare -i PIDOF_CAT=0

red='\033[1;31m'
green='\033[1;32m'
yell='\033[1;33m'
cyan='\033[1;36m'
white='\033[1;37m'
reset='\033[0m'

function check_action {
    [ -e "$SCHED_FILE" ] || waiting
    [ `wc -l $SCHED_FILE | awk '{print $1}'` -lt 1 ] && waiting
    TODAY=`date +%Y%m%d`
    NOW=`date +%k%M`
    while read -r DAY START FINISH CHAN; do
        #printf "$DAY $START $FINISH $CHAN\n"
        break
    done < $SCHED_FILE
    if [ $DAY == $TODAY ] && [ $START == $NOW ]; then
        ${ZAP_COMMAND} -a ${DVB_DEVICE_NUM} -f ${DVB_DEVICE_NUM} -d ${DVB_DEVICE_NUM} \
            -c $CHANNELS_CONF -r ${CHAN} >/dev/null 2>&1 &

        let PIDOF_AZAP="${!}"

        if (( ${PIDOF_AZAP} == 0 )); then
            printf "Error starting azap.\n"
            exit 1
        fi
        sleep 5
        printf "$green\tSET CHANNEL$cyan ${CHAN}\n"
        REC_HOURS=$(((${FINISH}/100)-(${START}/100)-1))
        if [ ${REC_HOURS} -lt 0 ]; then REC_HOURS=0;fi
        if [ ${REC_HOURS} -gt 0 ]; then
            REC_START=$((60-(${START}%100)))
            REC_MINS=$((${FINISH}%100))
        else
            REC_START=$((${FINISH}-${START}))
            if [ ${REC_START} -gt 60 ]; then REC_START=$((${REC_START}-40));fi
            REC_MINS=0
        fi
        MINUTES=$((${REC_START}+${REC_MINS}+(${REC_HOURS}*60)))
        declare FILE_NAME="${SAVE_FOLDER}/TV-ch${CHAN}-`date +%Y.%m.%d-%H.%M`-${MINUTES}.min.mpg"
        dd if=/dev/dvb/adapter${DVB_DEVICE_NUM}/dvr${DVB_DEVICE_NUM} of=${FILE_NAME} conv=noerror &
        let PIDOF_CAT="${!}"

        if (( ${PIDOF_CAT} == 0 )); then
            printf "$red\tError starting dd command on device file.\n"
            kill ${PIDOF_AZAP}
            exit 1
        fi
        printf "$yell\tRECORDING TO :$cyan ${FILE_NAME}\n"
        SECONDS=$((${MINUTES}*60))
        sleep ${SECONDS}s
        kill ${PIDOF_CAT} && wait ${PIDOF_CAT} 2> /dev/null

        kill ${PIDOF_AZAP} && wait ${PIDOF_AZAP} 2> /dev/null


        printf "$yell\tFINISHED REC :$cyan ${FILE_NAME}\n$reset"

        sed "/$DAY $START $FINISH $CHAN/d" $SCHED_FILE > /tmp/dummy
        mv /tmp/dummy $SCHED_FILE

        waiting
    else
        waiting
    fi
}

function waiting {
    sleep $SLEEP && check_action
}

check_action

exit 0
